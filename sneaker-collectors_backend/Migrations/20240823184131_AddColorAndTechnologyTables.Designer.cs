// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sneaker_collectors_backend;

#nullable disable

namespace sneaker_collectors_backend.Migrations
{
    [DbContext(typeof(SneakerCollectorsContext))]
    [Migration("20240823184131_AddColorAndTechnologyTables")]
    partial class AddColorAndTechnologyTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.Brand", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("country");

                    b.Property<DateOnly>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("history");

                    b.Property<string>("LogoSrc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("./images/default_brand_logo.png")
                        .HasColumnName("logo_src");

                    b.Property<string>("OfficialSiteUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("official_site_url");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__brands__3213E83FCF3DEB8C");

                    b.HasIndex(new[] { "Id" }, "UQ__brands__3213E83E360AA9F1")
                        .IsUnique();

                    b.ToTable("brands", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.BrandFounder", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("BornIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("born_in")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("BrandId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("brand_id");

                    b.Property<DateOnly?>("DiedIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("died_in")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("history");

                    b.Property<string>("PhotoSrc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("./images/default_user_photo.png")
                        .HasColumnName("photo_src");

                    b.HasKey("Id")
                        .HasName("PK__brand_fo__3213E83F609ADA79");

                    b.HasIndex("BrandId");

                    b.HasIndex(new[] { "Id" }, "UQ__brand_fo__3213E83E35771AF1")
                        .IsUnique();

                    b.ToTable("brand_founders", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.News", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("not specified")
                        .HasColumnName("author");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("body");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__news__3213E83F16D140B9");

                    b.HasIndex(new[] { "Id" }, "UQ__news__3213E83E69B4EF9B")
                        .IsUnique();

                    b.ToTable("news", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.NewsHashtag", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Hashtag")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("hashtag");

                    b.Property<string>("NewsId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("news_id");

                    b.HasKey("Id")
                        .HasName("PK__news_has__3213E83F743C7805");

                    b.HasIndex("NewsId");

                    b.HasIndex(new[] { "Id" }, "UQ__news_has__3213E83E6B8B89FE")
                        .IsUnique();

                    b.ToTable("news_hashtags", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.NewsPhoto", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("NewsId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("news_id");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("./images/news_white_background.png")
                        .HasColumnName("photo_url");

                    b.HasKey("Id")
                        .HasName("PK__news_pho__3213E83F4F070DEA");

                    b.HasIndex("NewsId");

                    b.HasIndex(new[] { "Id" }, "UQ__news_pho__3213E83EC98B8B27")
                        .IsUnique();

                    b.ToTable("news_photo", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.SneakerColor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SneakersColors");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.SneakerMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("InsideMaterial")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasDefaultValue("not specified")
                        .HasColumnName("inside_material");

                    b.Property<string>("InsoleMaterial")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasDefaultValue("not specified")
                        .HasColumnName("insole_material");

                    b.Property<string>("SneakerId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("sneaker_id");

                    b.Property<string>("SoleMaterial")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasDefaultValue("not specified")
                        .HasColumnName("sole_material");

                    b.Property<string>("UpMaterial")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasDefaultValue("not specified")
                        .HasColumnName("up_material");

                    b.HasKey("Id")
                        .HasName("PK__sneaker___3213E83F682CB5D4");

                    b.HasIndex("SneakerId");

                    b.HasIndex(new[] { "Id" }, "UQ__sneaker___3213E83E7E466882")
                        .IsUnique();

                    b.ToTable("sneaker_materials", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.SneakerPurpose", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("purpose");

                    b.Property<string>("SneakerSampleId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("sneaker_sample_id");

                    b.HasKey("Id")
                        .HasName("PK__sneaker___3213E83F3AC63A98");

                    b.HasIndex("SneakerSampleId");

                    b.HasIndex(new[] { "Id" }, "UQ__sneaker___3213E83E30F6554B")
                        .IsUnique();

                    b.ToTable("sneaker_purpose", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.SneakerTechnology", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SneakerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Technology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SneakerTechnologies");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.SneakersState", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("SneakerId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("sneaker_id");

                    b.Property<string>("State")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("not specified")
                        .HasColumnName("state");

                    b.HasKey("Id")
                        .HasName("PK__sneakers__3213E83F15B6D452");

                    b.HasIndex("SneakerId");

                    b.HasIndex(new[] { "Id" }, "UQ__sneakers__3213E83E9632E974")
                        .IsUnique();

                    b.ToTable("sneakers_state", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)")
                        .HasDefaultValue("do not specify")
                        .HasColumnName("gender");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("do not specify")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("PhoroSrc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("./images/default_user_photo.png")
                        .HasColumnName("phoro_src");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("do not specify")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F4DD14C9B");

                    b.HasIndex(new[] { "Id" }, "UQ__users__3213E83E6B6E2854")
                        .IsUnique();

                    b.HasIndex(new[] { "Login" }, "UQ__users__7838F27258646B67")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__users__AB6E6164852E06EE")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.UserSneaker", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("BrandId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("brand_id");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("discription");

                    b.Property<double>("Mileage")
                        .HasColumnType("float")
                        .HasColumnName("mileage");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("model");

                    b.Property<string>("Season")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("season");

                    b.Property<double>("Size")
                        .HasColumnType("float")
                        .HasColumnName("size");

                    b.HasKey("Id")
                        .HasName("PK__user_sne__3213E83FD6D4CB6D");

                    b.HasIndex("BrandId");

                    b.HasIndex(new[] { "Id" }, "UQ__user_sne__3213E83EE88219DB")
                        .IsUnique();

                    b.ToTable("user_sneakers", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.UserSneakersPhoto", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("PhotoSrc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("photo_src");

                    b.Property<string>("UserSneakerId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasDefaultValue("./images/default_sneaker_photo.png")
                        .HasColumnName("user_sneaker_id");

                    b.HasKey("Id")
                        .HasName("PK__user_sne__3213E83F5BC52704");

                    b.HasIndex("UserSneakerId");

                    b.HasIndex(new[] { "Id" }, "UQ__user_sne__3213E83E19817319")
                        .IsUnique();

                    b.ToTable("user_sneakers_photos", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.SneakerSample", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("BrandId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("brand_id");

                    b.Property<string>("ColorId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("not specified")
                        .HasColumnName("color");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValue("not specified")
                        .HasColumnName("discription");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("do not specify")
                        .HasColumnName("gender");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("model");

                    b.HasKey("Id")
                        .HasName("PK__sneaker___3213E83F8CAAB33B");

                    b.HasIndex(new[] { "Id" }, "UQ__sneaker___3213E83EDA7D1AC6")
                        .IsUnique();

                    b.ToTable("sneaker_samples", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.SneakerSamplesPhoto", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("PhotoSrc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("photo_src");

                    b.Property<string>("SneakerSampleId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasDefaultValue("./images/default_sneaker_photo.png")
                        .HasColumnName("sneaker_sample_id");

                    b.HasKey("Id")
                        .HasName("PK__sneaker___3213E83F26933E5A");

                    b.HasIndex("SneakerSampleId");

                    b.HasIndex(new[] { "Id" }, "UQ__sneaker___3213E83E06BF6E58")
                        .IsUnique();

                    b.ToTable("sneaker_samples_photos", (string)null);
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.BrandFounder", b =>
                {
                    b.HasOne("sneaker_collectors_backend.Models.Database.Brand", "Brand")
                        .WithMany("BrandFounders")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK__brand_fou__died___59FA5E80");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.NewsHashtag", b =>
                {
                    b.HasOne("sneaker_collectors_backend.Models.Database.News", "News")
                        .WithMany("NewsHashtags")
                        .HasForeignKey("NewsId")
                        .IsRequired()
                        .HasConstraintName("FK__news_hash__hasht__06CD04F7");

                    b.Navigation("News");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.NewsPhoto", b =>
                {
                    b.HasOne("sneaker_collectors_backend.Models.Database.News", "News")
                        .WithMany("NewsPhotos")
                        .HasForeignKey("NewsId")
                        .IsRequired()
                        .HasConstraintName("FK__news_phot__photo__0B91BA14");

                    b.Navigation("News");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.SneakerMaterial", b =>
                {
                    b.HasOne("sneaker_collectors_backend.SneakerSample", "Sneaker")
                        .WithMany("SneakerMaterials")
                        .HasForeignKey("SneakerId")
                        .IsRequired()
                        .HasConstraintName("FK__sneaker_m__insol__74AE54BC");

                    b.Navigation("Sneaker");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.SneakerPurpose", b =>
                {
                    b.HasOne("sneaker_collectors_backend.SneakerSample", "SneakerSample")
                        .WithMany("SneakerPurposes")
                        .HasForeignKey("SneakerSampleId")
                        .IsRequired()
                        .HasConstraintName("FK__sneaker_p__purpo__7D439ABD");

                    b.Navigation("SneakerSample");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.SneakersState", b =>
                {
                    b.HasOne("sneaker_collectors_backend.Models.Database.UserSneaker", "Sneaker")
                        .WithMany("SneakersStates")
                        .HasForeignKey("SneakerId")
                        .IsRequired()
                        .HasConstraintName("FK__sneakers___sneak__797309D9");

                    b.Navigation("Sneaker");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.UserSneaker", b =>
                {
                    b.HasOne("sneaker_collectors_backend.Models.Database.Brand", "Brand")
                        .WithMany("UserSneakers")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK__user_snea__seaso__5EBF139D");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.UserSneakersPhoto", b =>
                {
                    b.HasOne("sneaker_collectors_backend.Models.Database.UserSneaker", "UserSneaker")
                        .WithMany("UserSneakersPhotos")
                        .HasForeignKey("UserSneakerId")
                        .IsRequired()
                        .HasConstraintName("FK__user_snea__photo__68487DD7");

                    b.Navigation("UserSneaker");
                });

            modelBuilder.Entity("sneaker_collectors_backend.SneakerSamplesPhoto", b =>
                {
                    b.HasOne("sneaker_collectors_backend.SneakerSample", "SneakerSample")
                        .WithMany("SneakerSamplesPhotos")
                        .HasForeignKey("SneakerSampleId")
                        .IsRequired()
                        .HasConstraintName("FK__sneaker_s__photo__6D0D32F4");

                    b.Navigation("SneakerSample");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.Brand", b =>
                {
                    b.Navigation("BrandFounders");

                    b.Navigation("UserSneakers");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.News", b =>
                {
                    b.Navigation("NewsHashtags");

                    b.Navigation("NewsPhotos");
                });

            modelBuilder.Entity("sneaker_collectors_backend.Models.Database.UserSneaker", b =>
                {
                    b.Navigation("SneakersStates");

                    b.Navigation("UserSneakersPhotos");
                });

            modelBuilder.Entity("sneaker_collectors_backend.SneakerSample", b =>
                {
                    b.Navigation("SneakerMaterials");

                    b.Navigation("SneakerPurposes");

                    b.Navigation("SneakerSamplesPhotos");
                });
#pragma warning restore 612, 618
        }
    }
}
